{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n\n      function answersArray(question) {\n        const answersArray = [];\n        answersArray.push({\n          answer: question.correct_answer,\n          selected: false\n        });\n        question.incorrect_answers.map(answer => ({\n          answer: answer,\n          selected: false\n        }));\n      }\n\n      setQuestions(data.results.map((question, id) => ({\n        id: id,\n        question: question.question,\n        correct: question.correct_answer,\n        selected: false,\n        answers: answersArray(question)\n      })));\n    }\n\n    getQuestions();\n  }, []);\n  console.log(questions);\n\n  function checkCorrect(answer, correct, target, id, answers) {\n    target.disabled = true;\n  }\n\n  const allQuestions = questions.map((_ref, key) => {\n    let {\n      id,\n      disabled,\n      question,\n      correct,\n      answers,\n      selected\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: id,\n      selected: selected,\n      question: question,\n      correct: correct,\n      answers: answers,\n      checkCorrect: checkCorrect\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-container\",\n      children: [allQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","Quiz","questions","setQuestions","useState","useEffect","getQuestions","res","fetch","data","json","answersArray","question","push","answer","correct_answer","selected","incorrect_answers","map","results","id","correct","answers","console","log","checkCorrect","target","disabled","allQuestions","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,eAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,cAAMD,YAAY,GAAG,EAArB;AACAA,QAAAA,YAAY,CAACE,IAAb,CAAkB;AAACC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,cAAlB;AAAkCC,UAAAA,QAAQ,EAAE;AAA5C,SAAlB;AACAJ,QAAAA,QAAQ,CAACK,iBAAT,CAA2BC,GAA3B,CAA+BJ,MAAM,KAAK;AACtCA,UAAAA,MAAM,EAAEA,MAD8B;AAEtCE,UAAAA,QAAQ,EAAE;AAF4B,SAAL,CAArC;AAIH;;AAEDb,MAAAA,YAAY,CAACM,IAAI,CAACU,OAAL,CAAaD,GAAb,CAAiB,CAACN,QAAD,EAAWQ,EAAX,MAAmB;AAC7CA,QAAAA,EAAE,EAAEA,EADyC;AAE7CR,QAAAA,QAAQ,EAAEA,QAAQ,CAACA,QAF0B;AAG7CS,QAAAA,OAAO,EAAET,QAAQ,CAACG,cAH2B;AAI7CC,QAAAA,QAAQ,EAAE,KAJmC;AAK7CM,QAAAA,OAAO,EAAEX,YAAY,CAACC,QAAD;AALwB,OAAnB,CAAjB,CAAD,CAAZ;AAOH;;AACDN,IAAAA,YAAY;AACf,GAvBD,EAuBG,EAvBH;AA4BAiB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ;;AACA,WAASuB,YAAT,CAAsBX,MAAtB,EAA8BO,OAA9B,EAAuCK,MAAvC,EAA+CN,EAA/C,EAAmDE,OAAnD,EAA4D;AACxDI,IAAAA,MAAM,CAACC,QAAP,GAAkB,IAAlB;AACH;;AAGD,QAAMC,YAAY,GAAG1B,SAAS,CAACgB,GAAV,CACjB,OAAyDW,GAAzD,KAAiE;AAAA,QAA/D;AAACT,MAAAA,EAAD;AAAKO,MAAAA,QAAL;AAAef,MAAAA,QAAf;AAAyBS,MAAAA,OAAzB;AAAkCC,MAAAA,OAAlC;AAA2CN,MAAAA;AAA3C,KAA+D;AAC7D,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEI,EAFR;AAGI,MAAA,QAAQ,EAAEJ,QAHd;AAII,MAAA,QAAQ,EAAEJ,QAJd;AAKI,MAAA,OAAO,EAAES,OALb;AAMI,MAAA,OAAO,EAAEC,OANb;AAOI,MAAA,YAAY,EAAEG;AAPlB,OACSI,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAWP,GAboB,CAArB;AAeA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKD,YADL,eAEI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GAhEuB3B,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\n\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n\r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n        \r\n            function answersArray(question) {\r\n                const answersArray = []\r\n                answersArray.push({answer: question.correct_answer, selected: false})\r\n                question.incorrect_answers.map(answer => ({\r\n                    answer: answer,\r\n                    selected: false\r\n                }))\r\n            }\r\n\r\n            setQuestions(data.results.map((question, id) => ({\r\n                id: id,\r\n                question: question.question,\r\n                correct: question.correct_answer,\r\n                selected: false,\r\n                answers: answersArray(question)\r\n            })))\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n    \r\n    \r\n    \r\n\r\n    console.log(questions)\r\n    function checkCorrect(answer, correct, target, id, answers) {\r\n        target.disabled = true\r\n    }\r\n\r\n\r\n    const allQuestions = questions.map( \r\n        ( {id, disabled, question, correct, answers, selected} , key) => {\r\n            return (\r\n                <Question\r\n                    key={key}\r\n                    id={id}\r\n                    selected={selected}\r\n                    question={question}\r\n                    correct={correct}\r\n                    answers={answers}\r\n                    checkCorrect={checkCorrect}\r\n                />\r\n            )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            <div className='que-container'>\r\n                {allQuestions}\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}