{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  console.log(props); // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\n\n  const answersArray = props.incorrect.map(answer => `<p className='que-answer'>${answer}</p>`);\n  answersArray.push(`<p className='que-answer'>${props.correct}</p>`);\n  console.log(answersArray[0]);\n  const answ = answersArray.map(answer => {\n    return answer;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"que-question\",\n        children: props.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que-answers\",\n        children: answ\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Question","props","console","log","answersArray","incorrect","map","answer","push","correct","answ","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADoC,CAGpC;;AAEA,QAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoBC,MAAM,IAC1C,6BAA4BA,MAAO,MADnB,CAArB;AAGAH,EAAAA,YAAY,CAACI,IAAb,CAAmB,6BAA4BP,KAAK,CAACQ,OAAQ,MAA7D;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAAC,CAAD,CAAxB;AAEA,QAAMM,IAAI,GAAGN,YAAY,CAACE,GAAb,CAAiBC,MAAM,IAAI;AAAC,WAAOA,MAAP;AAAc,GAA1C,CAAb;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BN,KAAK,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACKD;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;KA5BuBV,Q","sourcesContent":["import React from 'react'\r\n\r\nexport default function Question(props) {\r\n    console.log(props)\r\n    \r\n    // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\r\n\r\n    const answersArray = props.incorrect.map(answer => \r\n        `<p className='que-answer'>${answer}</p>`\r\n    )\r\n    answersArray.push(`<p className='que-answer'>${props.correct}</p>`)\r\n    console.log(answersArray[0])\r\n    \r\n    const answ = answersArray.map(answer => {return answer})\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{props.question}</h2>\r\n                <div className='que-answers'>\r\n                    {answ}\r\n                </div>\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}