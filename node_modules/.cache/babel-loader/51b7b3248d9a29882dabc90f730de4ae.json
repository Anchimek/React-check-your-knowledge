{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\n  console.log(props);\n\n  function CreateAnswers() {\n    props.answers.map((ans, key) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'que-answer',\n        id: props.id,\n        onClick: e => props.checkCorrect(e.target.innerText, props.correct, e.target, props.id, props.answers),\n        children: ans\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"que-question\",\n        children: props.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que-answers\",\n        children: /*#__PURE__*/_jsxDEV(CreateAnswers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Question","props","console","log","CreateAnswers","answers","map","ans","key","id","e","checkCorrect","target","innerText","correct","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEI,WAASG,aAAT,GAAyB;AACpBH,IAAAA,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,0BAAO;AACA,QAAA,SAAS,EAAE,YADX;AAGA,QAAA,EAAE,EAAEP,KAAK,CAACQ,EAHV;AAIA,QAAA,OAAO,EACHC,CAAC,IAAIT,KAAK,CAACU,YAAN,CACGD,CAAC,CAACE,MAAF,CAASC,SADZ,EAEGZ,KAAK,CAACa,OAFT,EAGGJ,CAAC,CAACE,MAHL,EAIGX,KAAK,CAACQ,EAJT,EAKGR,KAAK,CAACI,OALT,CALT;AAAA,kBAcCE;AAdD,SAEKC,GAFL;AAAA;AAAA;AAAA;AAAA,cAAP;AAeQ,KAhBR;AAkBJ;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BP,KAAK,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;KAnCuBf,Q","sourcesContent":["import React from 'react'\r\n\r\nexport default function Question(props) {\r\n    // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\r\nconsole.log(props)\r\n\r\n    function CreateAnswers() {\r\n         props.answers.map( (ans, key) => {\r\n         return <p\r\n                className={'que-answer'} \r\n                key={key} \r\n                id={props.id}\r\n                onClick={ \r\n                    e => props.checkCorrect(\r\n                            e.target.innerText, \r\n                            props.correct, \r\n                            e.target, \r\n                            props.id, \r\n                            props.answers\r\n                        )\r\n                }\r\n            >\r\n                {ans}\r\n            </p>}\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{props.question}</h2>\r\n                <div className='que-answers'>\r\n                    <CreateAnswers />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}