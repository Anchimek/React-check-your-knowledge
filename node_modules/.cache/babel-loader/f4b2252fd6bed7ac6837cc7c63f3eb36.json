{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\n  console.log(props);\n  const createAnswers = props.answers.map((ans, key) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: ans.selected ? 'que-answer active' : 'que-answer',\n      disabled: ans.disabled,\n      onClick: e => props.checkSelected(ans, ans.id, props.id),\n      children: ans.answer\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"que-question\",\n        children: props.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que-answers\",\n        children: createAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Question","props","console","log","createAnswers","answers","map","ans","key","selected","disabled","e","checkSelected","id","answer","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,aAAa,GAAGH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAClB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACV,wBACQ;AACA,MAAA,SAAS,EAAED,GAAG,CAACE,QAAJ,GACG,mBADH,GAEG,YAHd;AAMA,MAAA,QAAQ,EAAEF,GAAG,CAACG,QANd;AAOA,MAAA,OAAO,EACHC,CAAC,IAAIV,KAAK,CAACW,aAAN,CACDL,GADC,EAEDA,GAAG,CAACM,EAFH,EAGDZ,KAAK,CAACY,EAHL,CART;AAAA,gBAeCN,GAAG,CAACO;AAfL,OAKKN,GALL;AAAA;AAAA;AAAA;AAAA,YADR;AAmBH,GArBiB,CAAtB;AAwBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BP,KAAK,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACKX;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;KArCuBJ,Q","sourcesContent":["import React from 'react'\r\n\r\nexport default function Question(props) {\r\n    // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\r\n    console.log(props)\r\n    const createAnswers = props.answers.map(\r\n        (ans, key) => {\r\n            return (\r\n                    <p\r\n                    className={ans.selected \r\n                                ? 'que-answer active'\r\n                                : 'que-answer'\r\n                    } \r\n                    key={key} \r\n                    disabled={ans.disabled}\r\n                    onClick={ \r\n                        e => props.checkSelected(\r\n                            ans,\r\n                            ans.id,\r\n                            props.id\r\n                        )\r\n                    }\r\n                >\r\n                    {ans.answer}\r\n                </p>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{props.question}</h2>\r\n                <div className='que-answers'>\r\n                    {createAnswers}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}