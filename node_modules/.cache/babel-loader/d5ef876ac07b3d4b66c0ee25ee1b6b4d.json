{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  console.log(props); // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\n\n  const test = {\n    correct: props.correct,\n    incorrect: props.incorrect\n  };\n  console.log(test);\n  const answersArray = props.incorrect.map(answer => answer);\n  answersArray.push(props.correct);\n  const answ = answersArray.map(answer => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"que-answer\",\n      children: [\"$\", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 53\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"que-question\",\n        children: props.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que-answers\",\n        children: answ\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Question","props","console","log","test","correct","incorrect","answersArray","map","answer","push","answ","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADoC,CAGpC;;AACA,QAAMG,IAAI,GAAG;AACTC,IAAAA,OAAO,EAAEJ,KAAK,CAACI,OADN;AAETC,IAAAA,SAAS,EAAEL,KAAK,CAACK;AAFR,GAAb;AAIAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,QAAMG,YAAY,GAAGN,KAAK,CAACK,SAAN,CAAgBE,GAAhB,CAAoBC,MAAM,IAC3CA,MADiB,CAArB;AAGAF,EAAAA,YAAY,CAACG,IAAb,CAAkBT,KAAK,CAACI,OAAxB;AAEA,QAAMM,IAAI,GAAGJ,YAAY,CAACC,GAAb,CAAiBC,MAAM,IAAI;AAAC,wBAAO;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,sBAA4BA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA+C,GAA3E,CAAb;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BR,KAAK,CAACW;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACKD;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;KA/BuBX,Q","sourcesContent":["import React from 'react'\r\n\r\nexport default function Question(props) {\r\n    console.log(props)\r\n    \r\n    // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\r\n    const test = {\r\n        correct: props.correct,\r\n        incorrect: props.incorrect\r\n    }\r\n    console.log(test)\r\n    const answersArray = props.incorrect.map(answer => \r\n        answer\r\n    )\r\n    answersArray.push(props.correct)\r\n    \r\n    const answ = answersArray.map(answer => {return <p className='que-answer'>${answer}</p>})\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{props.question}</h2>\r\n                <div className='que-answers'>\r\n                    {answ}\r\n                </div>\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}