{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [selected, setSelected] = React.useState(false);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      console.log(data);\n      setQuestions(data.results);\n    }\n\n    getQuestions();\n  }, []);\n  const [questions, setQuestions] = React.useState([]);\n  const question = {\n    question: [question.question],\n    correct: [question.correct_answer],\n    incorrect: [question.incorrect_answers]\n  };\n\n  function checkCorrect(answer, correct, target) {\n    console.log(answer);\n    console.log(correct);\n    target.classList.toggle('active');\n  }\n\n  function selectAnswer() {\n    setSelected(setSelected => !setSelected);\n  }\n\n  console.log(selected);\n  const allQuestions = questions.map((question, key) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: key,\n      question: question.question,\n      correct: question.correct,\n      incorrect: question.incorrect,\n      checkCorrect: checkCorrect,\n      selectAnswer: selectAnswer\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-container\",\n      children: [allQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"RlxJkP/z/1kJR9qlXsiBgRJ8Uo0=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","Quiz","selected","setSelected","useState","useEffect","getQuestions","res","fetch","data","json","console","log","setQuestions","results","questions","question","correct","correct_answer","incorrect","incorrect_answers","checkCorrect","answer","target","classList","toggle","selectAnswer","allQuestions","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhC;AAGAL,EAAAA,KAAK,CAACM,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,MAAAA,YAAY,CAACJ,IAAI,CAACK,OAAN,CAAZ;AACH;;AACDR,IAAAA,YAAY;AACf,GARD,EAQG,EARH;AAUA,QAAM,CAACS,SAAD,EAAYF,YAAZ,IAA4Bd,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEA,QAAMY,QAAQ,GAAG;AACbA,IAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACA,QAAV,CADG;AAEbC,IAAAA,OAAO,EAAE,CAACD,QAAQ,CAACE,cAAV,CAFI;AAGbC,IAAAA,SAAS,EAAE,CAACH,QAAQ,CAACI,iBAAV;AAHE,GAAjB;;AAKA,WAASC,YAAT,CAAsBC,MAAtB,EAA8BL,OAA9B,EAAuCM,MAAvC,EAA+C;AAC3CZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAM,IAAAA,MAAM,CAACC,SAAP,CAAiBC,MAAjB,CAAwB,QAAxB;AACH;;AAED,WAASC,YAAT,GAAwB;AACpBvB,IAAAA,WAAW,CAACA,WAAW,IAAI,CAACA,WAAjB,CAAX;AACH;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,QAAMyB,YAAY,GAAGZ,SAAS,CAACa,GAAV,CAAc,CAACZ,QAAD,EAAWa,GAAX,KAAmB;AAClD,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEA,GAFR;AAGI,MAAA,QAAQ,EAAEb,QAAQ,CAACA,QAHvB;AAII,MAAA,OAAO,EAAEA,QAAQ,CAACC,OAJtB;AAKI,MAAA,SAAS,EAAED,QAAQ,CAACG,SALxB;AAMI,MAAA,YAAY,EAAEE,YANlB;AAOI,MAAA,YAAY,EAAEK;AAPlB,OACSG,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZoB,CAArB;AAcA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKF,YADL,eAEI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GAzDuB1B,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\n\r\nexport default function Quiz() {\r\n    const [selected, setSelected] = React.useState(false)\r\n    \r\n    \r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n            console.log(data)\r\n            setQuestions(data.results)\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n    \r\n    const [questions, setQuestions] = React.useState([])\r\n    \r\n    const question = {\r\n        question: [question.question],\r\n        correct: [question.correct_answer],\r\n        incorrect: [question.incorrect_answers]\r\n    }\r\n    function checkCorrect(answer, correct, target) {\r\n        console.log(answer)\r\n        console.log(correct)\r\n        target.classList.toggle('active')\r\n    }\r\n\r\n    function selectAnswer() {\r\n        setSelected(setSelected => !setSelected)\r\n    }\r\n    console.log(selected)\r\n    const allQuestions = questions.map((question, key) => {    \r\n        return (\r\n            <Question\r\n                key={key}\r\n                id={key}\r\n                question={question.question}\r\n                correct={question.correct}\r\n                incorrect={question.incorrect}\r\n                checkCorrect={checkCorrect}\r\n                selectAnswer={selectAnswer}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            <div className='que-container'>\r\n                {allQuestions}\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}