{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsArray, setQuestionsArray] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestions();\n  }, []); // setQuestionsArray(questions.map((question, id) => ({\n  //     id: id,\n  //     question: question.question,\n  //     correct: question.correct_answer,\n  //     incorrect: question.incorrect_answers,\n  //     disabled: false\n  // })))\n\n  function checkCorrect(answer, correct, target, id, answers) {\n    console.log(answers); // setQuestions(oldQuestions => oldQuestions.map( question => {\n    //     console.log(question)\n    //     return question.id === id\n    //     ?   {\n    //         ...question,\n    //         disabled: !question.disabled\n    //     }\n    //     :   question\n    // }))\n    // if(que.selected) {\n    //     que.selected && target.classList.add('active')\n    // }\n    // console.log(answer)\n    // console.log(correct)\n    // console.log(que.selected)\n  }\n\n  const allQuestions = questionsArray.map((question, key) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: question.id,\n      disabled: question.disabled,\n      question: question.question,\n      correct: question.correct,\n      incorrect: question.incorrect,\n      checkCorrect: checkCorrect\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-container\",\n      children: [allQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"NBNEPWoeh3zMDDAa3tntcNxqsZI=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","Quiz","questions","setQuestions","useState","questionsArray","setQuestionsArray","useEffect","getQuestions","res","fetch","data","json","results","checkCorrect","answer","correct","target","id","answers","console","log","allQuestions","map","question","key","disabled","incorrect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5C;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAT,MAAAA,YAAY,CAACQ,IAAI,CAACE,OAAN,CAAZ;AACH;;AACDL,IAAAA,YAAY;AACf,GARD,EAQG,EARH,EAJ2B,CAc3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,WAASM,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+CC,EAA/C,EAAmDC,OAAnD,EAA4D;AACxDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EADwD,CAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAGA;AACA;AACA;AACH;;AAGD,QAAMG,YAAY,GAAGjB,cAAc,CAACkB,GAAf,CAAoB,CAACC,QAAD,EAAWC,GAAX,KAAmB;AACxD,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAED,QAAQ,CAACN,EAFjB;AAGI,MAAA,QAAQ,EAAEM,QAAQ,CAACE,QAHvB;AAII,MAAA,QAAQ,EAAEF,QAAQ,CAACA,QAJvB;AAKI,MAAA,OAAO,EAAEA,QAAQ,CAACR,OALtB;AAMI,MAAA,SAAS,EAAEQ,QAAQ,CAACG,SANxB;AAOI,MAAA,YAAY,EAAEb;AAPlB,OACSW,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZoB,CAArB;AAcA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKH,YADL,eAEI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GA9EuBrB,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\n\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n    const [questionsArray, setQuestionsArray] = React.useState([])\r\n\r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n            \r\n            setQuestions(data.results)\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n\r\n    // setQuestionsArray(questions.map((question, id) => ({\r\n    //     id: id,\r\n    //     question: question.question,\r\n    //     correct: question.correct_answer,\r\n    //     incorrect: question.incorrect_answers,\r\n    //     disabled: false\r\n    // })))\r\n\r\n\r\n\r\n\r\n\r\n    function checkCorrect(answer, correct, target, id, answers) {\r\n        console.log(answers)\r\n        // setQuestions(oldQuestions => oldQuestions.map( question => {\r\n        //     console.log(question)\r\n        //     return question.id === id\r\n        //     ?   {\r\n        //         ...question,\r\n        //         disabled: !question.disabled\r\n        //     }\r\n        //     :   question\r\n        // }))\r\n\r\n\r\n\r\n        // if(que.selected) {\r\n        //     que.selected && target.classList.add('active')\r\n\r\n        // }\r\n        \r\n        \r\n        // console.log(answer)\r\n        // console.log(correct)\r\n        // console.log(que.selected)\r\n    }\r\n\r\n\r\n    const allQuestions = questionsArray.map( (question, key) => { \r\n        return (\r\n            <Question\r\n                key={key}\r\n                id={question.id}\r\n                disabled={question.disabled}\r\n                question={question.question}\r\n                correct={question.correct}\r\n                incorrect={question.incorrect}\r\n                checkCorrect={checkCorrect}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            <div className='que-container'>\r\n                {allQuestions}\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}