{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      setQuestions(data.results.map(question => ({\n        question: question.question,\n        correct: question.correct_answer,\n        incorrect: question.incorrect_answers,\n        disabled: false\n      })));\n    }\n\n    getQuestions();\n  }, []);\n  console.log(questions);\n\n  function checkCorrect(answer, correct, target, id) {\n    target.classList.toggle('active');\n    console.log(id);\n    setQuestions(oldQuestions => oldQuestions.map(question => {\n      if (id === question.id) ({ ...question,\n        disabled: !question.disabled\n      });\n    }));\n    console.log(questions); // if(que.selected) {\n    //     que.selected && target.classList.add('active')\n    // }\n    // console.log(answer)\n    // console.log(correct)\n    // console.log(que.selected)\n  }\n\n  const allQuestions = questions.map((question, key) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: key,\n      disabled: question.disabled,\n      question: question.question,\n      correct: question.correct,\n      incorrect: question.incorrect,\n      checkCorrect: checkCorrect\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-container\",\n      children: [allQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","Quiz","questions","setQuestions","useState","useEffect","getQuestions","res","fetch","data","json","results","map","question","correct","correct_answer","incorrect","incorrect_answers","disabled","console","log","checkCorrect","answer","target","id","classList","toggle","oldQuestions","allQuestions","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,MAAAA,YAAY,CAACM,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,QAAQ,KAAK;AACvCA,QAAAA,QAAQ,EAAEA,QAAQ,CAACA,QADoB;AAEvCC,QAAAA,OAAO,EAAED,QAAQ,CAACE,cAFqB;AAGvCC,QAAAA,SAAS,EAAEH,QAAQ,CAACI,iBAHmB;AAIvCC,QAAAA,QAAQ,EAAE;AAJ6B,OAAL,CAAzB,CAAD,CAAZ;AAMH;;AACDZ,IAAAA,YAAY;AACf,GAbD,EAaG,EAbH;AAcAa,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;;AAEA,WAASmB,YAAT,CAAsBC,MAAtB,EAA8BR,OAA9B,EAAuCS,MAAvC,EAA+CC,EAA/C,EAAmD;AAC/CD,IAAAA,MAAM,CAACE,SAAP,CAAiBC,MAAjB,CAAwB,QAAxB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;AACArB,IAAAA,YAAY,CAACwB,YAAY,IAAIA,YAAY,CAACf,GAAb,CAAkBC,QAAQ,IAAI;AACvD,UAAGW,EAAE,KAAKX,QAAQ,CAACW,EAAnB,EAAuB,CAAC,EACpB,GAAGX,QADiB;AAEpBK,QAAAA,QAAQ,EAAE,CAACL,QAAQ,CAACK;AAFA,OAAD;AAO1B,KAR4B,CAAjB,CAAZ;AASIC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ,EAZ2C,CAa/C;AACA;AAEA;AAGA;AACA;AACA;AACH;;AAGD,QAAM0B,YAAY,GAAG1B,SAAS,CAACU,GAAV,CAAe,CAACC,QAAD,EAAWgB,GAAX,KAAmB;AACnD,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEA,GAFR;AAGI,MAAA,QAAQ,EAAEhB,QAAQ,CAACK,QAHvB;AAII,MAAA,QAAQ,EAAEL,QAAQ,CAACA,QAJvB;AAKI,MAAA,OAAO,EAAEA,QAAQ,CAACC,OALtB;AAMI,MAAA,SAAS,EAAED,QAAQ,CAACG,SANxB;AAOI,MAAA,YAAY,EAAEK;AAPlB,OACSQ,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZoB,CAArB;AAcA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACKD,YADL,eAEI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GAtEuB3B,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\n\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n    \r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n            \r\n            setQuestions(data.results.map(question => ({\r\n                question: question.question,\r\n                correct: question.correct_answer,\r\n                incorrect: question.incorrect_answers,\r\n                disabled: false\r\n            })))\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n    console.log(questions)\r\n\r\n    function checkCorrect(answer, correct, target, id) {\r\n        target.classList.toggle('active')\r\n        console.log(id)\r\n        setQuestions(oldQuestions => oldQuestions.map( question => {\r\n            if(id === question.id) ({\r\n                ...question,\r\n                disabled: !question.disabled\r\n            })\r\n                \r\n                        \r\n                \r\n        }))\r\n            console.log(questions)\r\n        // if(que.selected) {\r\n        //     que.selected && target.classList.add('active')\r\n\r\n        // }\r\n        \r\n        \r\n        // console.log(answer)\r\n        // console.log(correct)\r\n        // console.log(que.selected)\r\n    }\r\n\r\n\r\n    const allQuestions = questions.map( (question, key) => { \r\n        return (\r\n            <Question\r\n                key={key}\r\n                id={key}\r\n                disabled={question.disabled}\r\n                question={question.question}\r\n                correct={question.correct}\r\n                incorrect={question.incorrect}\r\n                checkCorrect={checkCorrect}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            <div className='que-container'>\r\n                {allQuestions}\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}