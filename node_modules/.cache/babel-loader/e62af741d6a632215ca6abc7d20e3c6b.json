{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Questions() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestions();\n  }, []);\n\n  function createQuestions() {\n    console.log(questions);\n    const qArr = questions.map(question => {\n      return `\n                <h2 className='que-question'>${question.question}</h2>\n                <div className='que-answers'>\n                    <p className='que-answer'>${question.incorrect_answers[0]}</p>\n                    <p className='que-answer'>${question.incorrect_answers[1]}</p>\n                    <p className='que-answer'>${question.incorrect_answers[2]}</p>\n                    <p className='que-answer'>Answer 4</p>\n                </div>\n            `;\n    }).join('');\n    console.log(qArr);\n  }\n\n  createQuestions();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [qArr, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"que-button\",\n        children: \"Check answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Questions, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Questions","questions","setQuestions","useState","useEffect","getQuestions","res","fetch","data","json","results","createQuestions","console","log","qArr","map","question","incorrect_answers","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAlC;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,MAAAA,YAAY,CAACM,IAAI,CAACE,OAAN,CAAZ;AACH;;AACDL,IAAAA,YAAY;AAEf,GATD,EASG,EATH;;AAWA,WAASM,eAAT,GAA2B;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA,UAAMa,IAAI,GAAGb,SAAS,CAACc,GAAV,CAAcC,QAAQ,IAAI;AACnC,aAAQ;AACpB,+CAA+CA,QAAQ,CAACA,QAAS;AACjE;AACA,gDAAgDA,QAAQ,CAACC,iBAAT,CAA2B,CAA3B,CAA8B;AAC9E,gDAAgDD,QAAQ,CAACC,iBAAT,CAA2B,CAA3B,CAA8B;AAC9E,gDAAgDD,QAAQ,CAACC,iBAAT,CAA2B,CAA3B,CAA8B;AAC9E;AACA;AACA,aARY;AASH,KAVY,EAUVC,IAVU,CAUL,EAVK,CAAb;AAWAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH;;AAAAH,EAAAA,eAAe;AAEhB,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACKG,IADL,eAEI;AACI,QAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH;;GA1CuBd,S;;KAAAA,S","sourcesContent":["import React from 'react'\r\n\r\nexport default function Questions() {\r\n    const [questions, setQuestions] = React.useState([])\r\n\r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n\r\n            setQuestions(data.results)\r\n        }\r\n        getQuestions()\r\n       \r\n    }, [])\r\n    \r\n    function createQuestions() {\r\n        console.log(questions)\r\n        const qArr = questions.map(question => {\r\n            return `\r\n                <h2 className='que-question'>${question.question}</h2>\r\n                <div className='que-answers'>\r\n                    <p className='que-answer'>${question.incorrect_answers[0]}</p>\r\n                    <p className='que-answer'>${question.incorrect_answers[1]}</p>\r\n                    <p className='que-answer'>${question.incorrect_answers[2]}</p>\r\n                    <p className='que-answer'>Answer 4</p>\r\n                </div>\r\n            `\r\n        }).join('')\r\n        console.log(qArr)\r\n    }createQuestions()\r\n    \r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                {qArr}\r\n                <button \r\n                    className='que-button'\r\n                >\r\n                    Check answers\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}