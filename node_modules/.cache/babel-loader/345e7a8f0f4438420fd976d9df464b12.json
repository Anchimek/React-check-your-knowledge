{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      console.log(data);\n      setQuestions(data.results);\n    }\n\n    getQuestions();\n  }, []);\n  const [correct, setCorrect] = React.useState(questions.correct_answer);\n  const allQuestions = questions.map((question, key) => {\n    function checkCorrect(ans) {\n      console.log(correct);\n      console.log(ans);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: key,\n      question: question.question,\n      correct: question.correct_answer,\n      incorrect: question.incorrect_answers,\n      checkCorrect: checkCorrect\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [allQuestions, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"que-button\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Quiz, \"iRxV3c0DJtrX1ayNEMXpmBQ9LFY=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","Quiz","questions","setQuestions","useState","useEffect","getQuestions","res","fetch","data","json","console","log","results","correct","setCorrect","correct_answer","allQuestions","map","question","key","checkCorrect","ans","incorrect_answers"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,YAAY,CAACM,IAAI,CAACI,OAAN,CAAZ;AACH;;AACDP,IAAAA,YAAY;AACf,GARD,EAQG,EARH;AAUA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACK,QAAN,CAAeF,SAAS,CAACc,cAAzB,CAA9B;AAEA,QAAMC,YAAY,GAAGf,SAAS,CAACgB,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAClD,aAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvBX,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACH;;AACD,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEF,GAFR;AAGI,MAAA,QAAQ,EAAED,QAAQ,CAACA,QAHvB;AAII,MAAA,OAAO,EAAEA,QAAQ,CAACH,cAJtB;AAKI,MAAA,SAAS,EAAEG,QAAQ,CAACI,iBALxB;AAMI,MAAA,YAAY,EAAEF;AANlB,OACSD,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAfoB,CAArB;AAiBA,sBACI;AAAA,eACKH,YADL,eAEI;AACI,MAAA,SAAS,EAAC,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAUH;;GA1CuBhB,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\n\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n\r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n            console.log(data)\r\n            setQuestions(data.results)\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n\r\n    const [correct, setCorrect] = React.useState(questions.correct_answer)\r\n\r\n    const allQuestions = questions.map((question, key) => {    \r\n        function checkCorrect(ans) {\r\n            console.log(correct)\r\n            console.log(ans)\r\n        }\r\n        return (\r\n            <Question\r\n                key={key}\r\n                id={key}\r\n                question={question.question}\r\n                correct={question.correct_answer}\r\n                incorrect={question.incorrect_answers}\r\n                checkCorrect={checkCorrect}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>  \r\n            {allQuestions}\r\n            <button \r\n                className='que-button'\r\n            >\r\n                Check answers\r\n            </button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}