{"ast":null,"code":"import decode from'html-entities-decode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Question(props){function className(answer){if(props.allSelected&&!answer.correct&&answer.selected)return'que-answer incorrect';else if(props.allSelected&&answer.correct)return'que-answer correct';else if(answer.selected)return'que-answer active';else return'que-answer';}var createAnswers=props.answers.map(function(answer,key){return/*#__PURE__*/_jsx(\"button\",{className:className(answer),disabled:props.disabled,onClick:function onClick(){return props.checkSelected(answer,answer.id,props.id);},children:decode(answer.answer)},key);});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"que-face\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"que-question\",children:decode(props.question)}),/*#__PURE__*/_jsx(\"div\",{className:\"que-answers\",children:createAnswers})]})});}","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["decode","Question","props","className","answer","allSelected","correct","selected","createAnswers","answers","map","key","disabled","checkSelected","id","question"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,sBAAnB,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAEpC,QAASC,CAAAA,SAAT,CAAmBC,MAAnB,CAA2B,CACvB,GACIF,KAAK,CAACG,WAAN,EACG,CAACD,MAAM,CAACE,OADX,EAEGF,MAAM,CAACG,QAHd,CAKI,MAAO,sBAAP,CALJ,IAMK,IACDL,KAAK,CAACG,WAAN,EACGD,MAAM,CAACE,OAFT,CAID,MAAO,oBAAP,CAJC,IAKA,IACDF,MAAM,CAACG,QADN,CAGD,MAAO,mBAAP,CAHC,IAIA,OAAO,YAAP,CACR,CACD,GAAMC,CAAAA,aAAa,CAAGN,KAAK,CAACO,OAAN,CAAcC,GAAd,CAClB,SAACN,MAAD,CAASO,GAAT,CAAiB,CACb,mBACI,eACI,SAAS,CAAER,SAAS,CAACC,MAAD,CADxB,CAGI,QAAQ,CAAEF,KAAK,CAACU,QAHpB,CAII,OAAO,CAAE,yBAAMV,CAAAA,KAAK,CAACW,aAAN,CACXT,MADW,CAEXA,MAAM,CAACU,EAFI,CAGXZ,KAAK,CAACY,EAHK,CAAN,EAJb,UAWKd,MAAM,CAACI,MAAM,CAACA,MAAR,CAXX,EAESO,GAFT,CADJ,CAeH,CAjBiB,CAAtB,CAoBA,mBACI,sCACI,aAAK,SAAS,CAAC,UAAf,wBACI,WAAI,SAAS,CAAC,cAAd,UAA8BX,MAAM,CAACE,KAAK,CAACa,QAAP,CAApC,EADJ,cAEI,YAAK,SAAS,CAAC,aAAf,UACKP,aADL,EAFJ,GADJ,EADJ,CAUH","sourcesContent":["import decode from 'html-entities-decode';\r\n\r\nexport default function Question(props) {\r\n\r\n    function className(answer) {\r\n        if (\r\n            props.allSelected\r\n            && !answer.correct\r\n            && answer.selected\r\n        )\r\n            return 'que-answer incorrect'\r\n        else if (\r\n            props.allSelected\r\n            && answer.correct\r\n        )\r\n            return 'que-answer correct'\r\n        else if (\r\n            answer.selected\r\n        )\r\n            return 'que-answer active'\r\n        else return 'que-answer'\r\n    }\r\n    const createAnswers = props.answers.map(\r\n        (answer, key) => {\r\n            return (\r\n                <button\r\n                    className={className(answer)}\r\n                    key={key}\r\n                    disabled={props.disabled}\r\n                    onClick={() => props.checkSelected(\r\n                        answer,\r\n                        answer.id,\r\n                        props.id\r\n                    )\r\n                    }\r\n                >\r\n                    {decode(answer.answer)}\r\n                </button>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{decode(props.question)}</h2>\r\n                <div className='que-answers'>\r\n                    {createAnswers}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}