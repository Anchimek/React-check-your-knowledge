{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Question from './Question';\nimport { useId } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n``;\nexport default function Quiz() {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=10');\n      const data = await res.json();\n      setQuestions(data.results);\n    }\n\n    getQuestions();\n  }, []);\n  console.log(questions);\n  const allQuestions = questions.map((question, key) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: key,\n      question: question.question,\n      correct: question.correctAnswer,\n      incorrect: question.incorrectAnswer\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: allQuestions\n  }, void 0, false);\n}\n\n_s(Quiz, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Quiz.js"],"names":["React","Question","useId","Quiz","questions","setQuestions","useState","useEffect","getQuestions","res","fetch","data","json","results","console","log","allQuestions","map","question","key","correctAnswer","incorrectAnswer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,OAAtB;;;AACC,EAAD;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAiB,MAAM;AACnB,mBAAeC,YAAf,GAA8B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,MAAAA,YAAY,CAACM,IAAI,CAACE,OAAN,CAAZ;AACH;;AACDL,IAAAA,YAAY;AACf,GARD,EAQG,EARH;AASAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAGA,QAAMY,YAAY,GAAGZ,SAAS,CAACa,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAClD,wBACI,QAAC,QAAD;AAEI,MAAA,EAAE,EAAEA,GAFR;AAGI,MAAA,QAAQ,EAAED,QAAQ,CAACA,QAHvB;AAII,MAAA,OAAO,EAAEA,QAAQ,CAACE,aAJtB;AAKI,MAAA,SAAS,EAAEF,QAAQ,CAACG;AALxB,OACSF,GADT;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVoB,CAArB;AAWA,sBACI;AAAA,cACKH;AADL,mBADJ;AAKH;;GA/BuBb,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\nimport { useId } from 'react'\r\n``\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n\r\n    React.useEffect( () => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n\r\n            setQuestions(data.results)\r\n        }\r\n        getQuestions()\r\n    }, [])\r\n    console.log(questions)\r\n\r\n\r\n    const allQuestions = questions.map((question, key) => {    \r\n        return (\r\n            <Question\r\n                key={key}\r\n                id={key}\r\n                question={question.question}\r\n                correct={question.correctAnswer}\r\n                incorrect={question.incorrectAnswer}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <>  \r\n            {allQuestions}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}