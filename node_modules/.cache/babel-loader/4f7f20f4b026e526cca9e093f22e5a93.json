{"ast":null,"code":"import _objectSpread from\"C:/Users/jan1/Desktop/HTML/react-check-your-knowledge/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/jan1/Desktop/HTML/react-check-your-knowledge/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/jan1/Desktop/HTML/react-check-your-knowledge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/jan1/Desktop/HTML/react-check-your-knowledge/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\react-check-your-knowledge\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from'react';import Question from'./Question';import{nanoid}from'nanoid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Quiz(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),questions=_React$useState2[0],setQuestions=_React$useState2[1];var _React$useState3=React.useState(true),_React$useState4=_slicedToArray(_React$useState3,2),buttonDisabled=_React$useState4[0],setButtonDisabled=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),allSelected=_React$useState6[0],setAllSelected=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),newQuestions=_React$useState8[0],setNewQuestions=_React$useState8[1];React.useEffect(function(){function getQuestions(){return _getQuestions.apply(this,arguments);}function _getQuestions(){_getQuestions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data,shuffle;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:shuffle=function _shuffle(shuffleArr){var currentIndex=shuffleArr.length,randomIndex;while(currentIndex!==0){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;var _ref=[shuffleArr[randomIndex],shuffleArr[currentIndex]];shuffleArr[currentIndex]=_ref[0];shuffleArr[randomIndex]=_ref[1];}return shuffleArr;};_context.next=3;return fetch('https://opentdb.com/api.php?amount=10');case 3:res=_context.sent;_context.next=6;return res.json();case 6:data=_context.sent;setQuestions(data.results.map(function(question,id){return{id:id,question:question.question,correct:question.correct_answer,disabled:false,answers:[question.correct_answer].concat(_toConsumableArray(question.incorrect_answers))};}));//shuffling an answers\nsetQuestions(function(oldQuestions){return oldQuestions.map(function(question){var answersArr=shuffle(question.answers);return _objectSpread(_objectSpread({},question),{},{answers:answersArr.map(function(answer){return{id:nanoid(),answer:answer,selected:false,correct:question.correct===answer?true:false};})});});});case 9:case\"end\":return _context.stop();}}},_callee);}));return _getQuestions.apply(this,arguments);}getQuestions().catch(function(error){return console.error(error);});},[newQuestions]);function checkSelected(id,targetId){setQuestions(function(oldQuestions){return oldQuestions.map(function(question){return _objectSpread(_objectSpread({},question),{},{disabled:question.id===targetId?!question.disabled:question.disabled,answers:question.answers.map(function(answer){return answer.id===id?_objectSpread(_objectSpread({},answer),{},{selected:!answer.selected}):answer;})});});});}var allQuestions=questions.map(function(_ref2,key){var id=_ref2.id,question=_ref2.question,correct=_ref2.correct,answers=_ref2.answers,disabled=_ref2.disabled;return/*#__PURE__*/_jsx(Question,{id:id,disabled:disabled,question:question,allSelected:allSelected,correct:correct,answers:answers,checkSelected:checkSelected},key);});React.useEffect(function(){if(questions.length>0){var allChosen=questions.every(function(question){return question.disabled;});if(allChosen)setButtonDisabled(false);}},[questions]);function checkAnswers(e){e.preventDefault();setAllSelected(true);setButtonDisabled(true);}function newGame(e){e.preventDefault();setAllSelected(false);setNewQuestions(function(oldState){return!oldState;});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{className:\"que-container\",children:[allQuestions,/*#__PURE__*/_jsxs(\"div\",{className:\"buttons-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"que-button\",disabled:buttonDisabled,onClick:checkAnswers,children:\"Check answers\"}),/*#__PURE__*/_jsx(\"button\",{className:\"home-button\",onClick:function onClick(e){return newGame(e);},children:\"New questions\"})]})]})});}","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/react-check-your-knowledge/src/Quiz.js"],"names":["React","Question","nanoid","Quiz","useState","questions","setQuestions","buttonDisabled","setButtonDisabled","allSelected","setAllSelected","newQuestions","setNewQuestions","useEffect","getQuestions","shuffle","shuffleArr","currentIndex","length","randomIndex","Math","floor","random","fetch","res","json","data","results","map","question","id","correct","correct_answer","disabled","answers","incorrect_answers","oldQuestions","answersArr","answer","selected","catch","error","console","checkSelected","targetId","allQuestions","key","allChosen","every","checkAnswers","e","preventDefault","newGame","oldState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Question from './Question'\r\nimport { nanoid } from 'nanoid'\r\n\r\nexport default function Quiz() {\r\n    const [questions, setQuestions] = React.useState([])\r\n    const [buttonDisabled, setButtonDisabled] = React.useState(true)\r\n    const [allSelected, setAllSelected] = React.useState(false)\r\n    const [newQuestions, setNewQuestions] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        async function getQuestions() {\r\n            const res = await fetch('https://opentdb.com/api.php?amount=10')\r\n            const data = await res.json()\r\n\r\n            setQuestions(data.results.map((question, id) => ({\r\n                id: id,\r\n                question: question.question,\r\n                correct: question.correct_answer,\r\n                disabled: false,\r\n                answers: [question.correct_answer, ...question.incorrect_answers]\r\n            })))\r\n\r\n            //shuffling an answers\r\n            setQuestions(oldQuestions => oldQuestions.map(question => {\r\n                const answersArr = shuffle(question.answers)\r\n                return ({\r\n                    ...question,\r\n                    answers: answersArr.map(answer => ({\r\n                        id: nanoid(),\r\n                        answer: answer,\r\n                        selected: false,\r\n                        correct: question.correct === answer\r\n                            ? true : false\r\n                    }))\r\n                })\r\n            }\r\n            ))\r\n\r\n            function shuffle(shuffleArr) {\r\n                let currentIndex = shuffleArr.length, randomIndex\r\n\r\n                while (currentIndex !== 0) {\r\n                    randomIndex = Math.floor(Math.random() * currentIndex)\r\n                    currentIndex--\r\n\r\n                    [shuffleArr[currentIndex], shuffleArr[randomIndex]]\r\n                        = [shuffleArr[randomIndex], shuffleArr[currentIndex]]\r\n                }\r\n                return shuffleArr\r\n            }\r\n\r\n        }\r\n        getQuestions().catch(error => console.error(error))\r\n    }, [newQuestions])\r\n\r\n    function checkSelected(id, targetId) {\r\n        setQuestions(oldQuestions => oldQuestions.map(question => ({\r\n            ...question,\r\n            disabled: question.id === targetId\r\n                ? !question.disabled\r\n                : question.disabled,\r\n            answers: question.answers.map(answer => {\r\n                return answer.id === id\r\n                    ? { ...answer, selected: !answer.selected }\r\n                    : answer\r\n            })\r\n        })))\r\n    }\r\n\r\n    const allQuestions = questions.map(\r\n        ({ id, question, correct, answers, disabled }, key) => {\r\n            return (\r\n                <Question\r\n                    key={key}\r\n                    id={id}\r\n                    disabled={disabled}\r\n                    question={question}\r\n                    allSelected={allSelected}\r\n                    correct={correct}\r\n                    answers={answers}\r\n                    checkSelected={checkSelected}\r\n                />\r\n            )\r\n        })\r\n\r\n    React.useEffect(() => {\r\n        if (questions.length > 0) {\r\n            const allChosen = questions.every(\r\n                question => question.disabled\r\n            )\r\n\r\n            if (allChosen) setButtonDisabled(false)\r\n        }\r\n    }, [questions])\r\n\r\n    function checkAnswers(e) {\r\n        e.preventDefault()\r\n        setAllSelected(true)\r\n        setButtonDisabled(true)\r\n    }\r\n\r\n    function newGame(e) {\r\n        e.preventDefault()\r\n        setAllSelected(false)\r\n        setNewQuestions(oldState => !oldState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className='que-container'>\r\n                {allQuestions}\r\n                <div className='buttons-container'>\r\n                    <button\r\n                        className='que-button'\r\n                        disabled={buttonDisabled}\r\n                        onClick={checkAnswers}\r\n                    >\r\n                        Check answers\r\n                    </button>\r\n                    <button\r\n                        className='home-button'\r\n                        onClick={e => newGame(e)}\r\n                    >\r\n                        New questions\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}