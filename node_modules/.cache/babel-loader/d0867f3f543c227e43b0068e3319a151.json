{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan1\\\\Desktop\\\\HTML\\\\quiz-react\\\\src\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  console.log(props);\n  const [selected, setSelected] = React.useState(false); // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\n\n  const question = {\n    question: props.question,\n    correct: props.correct,\n    incorrect: props.incorrect\n  };\n\n  function CreateAnswers() {\n    const incorrectArr = question.incorrect;\n    incorrectArr.push(question.correct);\n    return incorrectArr.map((ans, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"que-answer\",\n      onClick: e => {\n        setSelected(true);\n        return props.checkCorrect(e.target.innerText, question.correct, e.target, selected);\n      },\n      children: ans\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que-face\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"que-question\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que-answers\",\n        children: /*#__PURE__*/_jsxDEV(CreateAnswers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Question, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/jan1/Desktop/HTML/quiz-react/src/Question.js"],"names":["React","Question","props","console","log","selected","setSelected","useState","question","correct","incorrect","CreateAnswers","incorrectArr","push","map","ans","key","e","checkCorrect","target","innerText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAhC,CAFoC,CAIpC;;AACA,QAAMC,QAAQ,GAAG;AACbA,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QADH;AAEbC,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAFF;AAGbC,IAAAA,SAAS,EAAER,KAAK,CAACQ;AAHJ,GAAjB;;AAMA,WAASC,aAAT,GAAyB;AACrB,UAAMC,YAAY,GAAGJ,QAAQ,CAACE,SAA9B;AACAE,IAAAA,YAAY,CAACC,IAAb,CAAkBL,QAAQ,CAACC,OAA3B;AACA,WAAOG,YAAY,CAACE,GAAb,CAAkB,CAACC,GAAD,EAAMC,GAAN,kBACrB;AACI,MAAA,SAAS,EAAC,YADd;AAGI,MAAA,OAAO,EAAGC,CAAC,IAAI;AACXX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA,eAAOJ,KAAK,CAACgB,YAAN,CAAmBD,CAAC,CAACE,MAAF,CAASC,SAA5B,EAAuCZ,QAAQ,CAACC,OAAhD,EAAyDQ,CAAC,CAACE,MAA3D,EAAmEd,QAAnE,CAAP;AACH,OANL;AAAA,gBAQKU;AARL,OAESC,GAFT;AAAA;AAAA;AAAA;AAAA,YADG,CAAP;AAYH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BR,QAAQ,CAACA;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;;GAtCuBP,Q;;KAAAA,Q","sourcesContent":["import React from 'react'\r\n\r\nexport default function Question(props) {\r\n    console.log(props)\r\n    const [selected, setSelected] = React.useState(false)\r\n\r\n    // const question = props.question.replace(/&quot;/g, '\"').replace(/&#039;/g, `'`)\r\n    const question = {\r\n        question: props.question,\r\n        correct: props.correct,\r\n        incorrect: props.incorrect\r\n    }\r\n\r\n    function CreateAnswers() {\r\n        const incorrectArr = question.incorrect\r\n        incorrectArr.push(question.correct)\r\n        return incorrectArr.map( (ans, key) => \r\n            <p \r\n                className='que-answer' \r\n                key={key} \r\n                onClick={ e => {\r\n                    setSelected(true)\r\n                    return props.checkCorrect(e.target.innerText, question.correct, e.target, selected)\r\n                }}\r\n            >\r\n                {ans}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='que-face'>\r\n                <h2 className='que-question'>{question.question}</h2>\r\n                <div className='que-answers'>\r\n                    <CreateAnswers />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}